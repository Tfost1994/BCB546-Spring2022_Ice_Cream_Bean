# BLAST and reciprocal BLAST

To install blast+ on a local Ubuntu-based unix system
```
sudo apt-get install ncbi-blast+
```

Navigate to git repository. Result of pwd should be end in "/BCB546-Spring2022_Ice_Cream_Bean"
```
pwd
```

Create directories to organize data
```
mkdir -p ./blast/TA/ ./blast/HV/ ./blast/AT
```

URL information can be obtained from [Ensembl Plant FTP](http://ftp.ensemblgenomes.org/pub/plants/). Beginning of below URLs should remain the same (rsync://ftp.ebi.ac.uk/ensemblgenomes/pub/). The end can be changed based on Index listed on the webpage you navigate to within the [Ensembl Plant FTP](http://ftp.ensemblgenomes.org/pub/plants/).
Rsync information obtained from [Ensembl Plant Info](https://plants.ensembl.org/info/data/ftp/rsync.html)
```
cd ./blast
rsync -av rsync://ftp.ebi.ac.uk/ensemblgenomes/pub/plants/release-26/fasta/hordeum_vulgare/pep/ ./HV
rsync -av rsync://ftp.ebi.ac.uk/ensemblgenomes/pub/plants/release-26/fasta/triticum_aestivum/pep/ ./TA
rsync -av rsync://ftp.ebi.ac.uk/ensemblgenomes/pub/plants/release-26/fasta/arabidopsis_thaliana/pep/ ./AT
```

Create database from .fa.gz files downloaded in previous step using makeblastdb
```
cd TA
gunzip -c Triticum_aestivum.IWGSC2.26.pep.all.fa.gz | makeblastdb -parse_seqids -in - -title Triticum_aestivum_db -dbtype prot -out TAdb

cd ../HV
gunzip -c Hordeum_vulgare.082214v1.26.pep.all.fa.gz | makeblastdb -parse_seqids -in - -title Hordeum_vulgare_db -dbtype prot -out HVdb

cd ../AT
gunzip -c Arabidopsis_thaliana.TAIR10.26.pep.all.fa.gz | makeblastdb -parse_seqids -in - -title Arabidopsis_thaliana_db -dbtype prot -out ATdb
```

Used TAIR [bulk data retrieval tool](https://www.arabidopsis.org/tools/bulk/sequences/index.jsp) to obtain gene sequences listed in Supplemental Data 1. No Arabidopsis genome version was listed in the paper so the Araport11 coding sequences data set was used. One sequence per locus query option was also used and data were output to a fasta file and saved as `AT_prot.fasta` at /BCB546-Spring2022_Ice_Cream_Bean/blast. The 14 miRNA locus IDs were not found using this search.


Blast for barley and wheat protein sequences using Arabidopsis flowering genes
```
blastp -query AT_prot.fasta -task blastp -db ./TA/TAdb -out TA_blast.html -evalue 1e-5 -html -outfmt 6
blastp -query AT_prot.fasta -task blastp -db ./HV/HVdb -out HV_blast.html -evalue 1e-5 -html -outfmt 6

```
retrieve sequences for reciprocal blast
```
mkdir reciprocal_HV reciprocal_TA
awk '{print $2}' TA_blast.html | sort | uniq | blastdbcmd -db ./TA/TAdb -entry_batch - -outfmt "%f" >./reciprocal_TA/TA_flowering.fasta
awk '{print $2}' HV_blast.html | sort | uniq | blastdbcmd -db ./HV/HVdb -entry_batch - -outfmt "%f" >./reciprocal_HV/HV_flowering.fasta
```
perform reciprocal blastp
```
blastp -query ./reciprocal_TA/TA_flowering.fasta -task blastp-fast -db ./AT/ATdb -out ./reciprocal_TA/AT_TA_blast.html -evalue 1e-5 -html -outfmt 6 -max_target_seqs 3
blastp -query ./reciprocal_HV/HV_flowering.fasta -task blastp -db ./AT/ATdb -out ./reciprocal_HV/AT_HV_blast.html -evalue 1e-5 -html -outfmt 6 -max_target_seqs 3
```
Get Triticum aestivum & Hordeum vulgare genes which have same Arabidopsis thaliana gene in top 3 results of reciprocal search. Paper appears to have not considered the .# at the end of gene names when preforming these searches.

<!---
Create list from the original TA blast search to match reciprocal against
```
awk '{print $2"\t"$1}' TA_blast.html | sort | perl -pe 's;\.[0-9]{1};;g' | uniq >./reciprocal_TA/TA_match.txt
awk '{print $2"\t"$1}' HV_blast.html | sort | perl -pe 's;\.[0-9]{1};;g' | uniq >./reciprocal_HV/HV_match.txt
```

Simplify names in the reciprocal to enable grep search downstream
```
sort ./reciprocal_TA/AT_TA_blast.html | perl -pe 's;\.[0-9]{1}\t;\t;g'  >./reciprocal_TA/AT_TA_blast_simplifedgenenames.txt
sort ./reciprocal_HV/AT_HV_blast.html | perl -pe 's;\.[0-9]{1}\t;\t;g' >./reciprocal_HV/AT_HV_blast_simplifedgenenames.txt
```
--->
Create list from the original TA blast search to match reciprocal against
```
awk '{print $2"\t"$1}' TA_blast.html | sort | uniq >./reciprocal_TA/TA_match.txt
awk '{print $2"\t"$1}' HV_blast.html | sort | uniq >./reciprocal_HV/HV_match.txt

```
Grep to match original against reciprocal using the new names
```
grep -Ff ./reciprocal_TA/TA_match.txt ./reciprocal_TA/AT_TA_blast.html | awk {'print $1'} | sort | uniq | sort -k2 >TA_reciprocal_match_genenames.txt

grep -Ff ./reciprocal_HV/HV_match.txt ./reciprocal_HV/AT_HV_blast.html | awk {'print $1'} | sort | uniq | sort -k2 >HV_reciprocal_match_genenames.txt
```
```
blastdbcmd -db ./TA/TAdb -entry all -outfmt "%f" | grep -f TA_reciprocal_match_genenames.txt - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./TA/TAdb -entry_batch - -outfmt "%f" >TA_OrthoMCL.fasta

blastdbcmd -db ./HV/HVdb -entry all -outfmt "%f" | grep -f HV_reciprocal_match_genenames.txt - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./HV/HVdb -entry_batch - -outfmt "%f" >HV_OrthoMCL.fasta
```
```
mkdir ../OrthoMCL
cp TA_OrthoMCL.fasta ../OrthoMCL/
cp HV_OrthoMCL.fasta ../OrthoMCL/
cp AT_prot.fasta ../OrthoMCL
```
Use TA_OrthoMCL.fasta, HV_OrthoMCL.fasta, and AT_prot.fasta in OrthoMCL in HPC class. Files were transfered by cloning the repository onto HPC-Class

```
module load dafoam/1.0
module load orthomcl
```
Below commands were copied or adapted directly from the OrthoMCL tutorial from (bioinformaticsworkbook.org)[https://bioinformaticsworkbook.org/phylogenetics/00-finding-orthologs-uisng-orthoMCL.html#gsc.tab=0].

standardize the headers of the fasta files
```
for fasta in *.fasta; do
cut -f 1 -d " " $fasta > ${fasta%.*}.temp;
mv ${fasta%.*}.temp $fasta
done
```
```
module load singularity
singularity pull --name orthomcl.simg shub://ISU-HPC/orthomcl

mkdir -p original complaintFasta
mv *.fasta original/
singularity shell orthomcl.simg
cd complaintFasta
for fasta in ../original/*.fasta; do
orthomclAdjustFasta $(basename ${fasta%.*}) ${fasta} 1
done

cd ..
orthomclFilterFasta complaintFasta 10 20

module load ncbi-blast
makeblastdb -in goodProteins.fasta -dbtype prot -parse_seqids -out goodProteins.fasta

blastp -db goodProteins.fasta -query goodProteins.fasta -outfmt 6 -evalue 1e-5 -out blastp.tsv -num_threads 4

orthomclBlastParser blastp.tsv ./complaintFasta/ >> similarSequences.txt
```

mySQL set up
```
cat > orthomcl.config <<END
dbVendor=mysql
dbConnectString=dbi:mysql:orthomcl:mysql_local_infile=1:localhost:3306
dbLogin=root
dbPassword=my-secret-pw
similarSequencesTable=SimilarSequences
orthologTable=Ortholog
inParalogTable=InParalog
coOrthologTable=CoOrtholog
interTaxonMatchView=InterTaxonMatch
percentMatchCutoff=50
evalueExponentCutoff=-5
oracleIndexTblSpc=NONE
END

module load singularity
singularity pull --name mysql.simg shub://ISU-HPC/mysql

mkdir -p ${PWD}/mysql/var/lib/mysql ${PWD}/mysql/run/mysqld
```
log out of hpc-class and log back in
```
module load dafoam/1.0
module load orthomcl

singularity instance start --bind ${HOME} \
--bind ${PWD}/mysql/var/lib/mysql/:/var/lib/mysql \
--bind ${PWD}/mysql/run/mysqld:/run/mysqld \
./mysql.simg mysql


singularity run instance://mysql
```
The $ line will not return. Enter the next line after a few seconds when cursor stops blinking.
```
singularity exec instance://mysql mysqladmin create orthomcl

singularity shell --bind $PWD \
  --bind ${PWD}/mysql/run/mysqld:/run/mysqld \
  ./orthomcl.simg
```
these may throw perl errors but files will be written anyway
```
orthomclInstallSchema orthomcl.config

orthomclLoadBlast orthomcl.config similarSequences.txt

orthomclDumpPairsFiles orthomcl.config

```
To singularity terminal exit type
```
exit
```
then to end the instance
```
singularity instance stop mysql
```
clustering
```
module load mcl

for i in $(seq 1.5 0.5 6); do
mcl mclInput --abc -I ${i} -o groups_${i}.txt;
orthomclMclToGroups OG${i}_ 1000 < groups_${i}.txt > named_groups_${i}.txt;
done

git clone git@github.com:ISUgenomics/common_scripts.git
cp ./common_scripts/CopyNumberGen.sh ./
cp ./common_scripts/ExtractSCOs.sh ./

chmod a+x ./CopyNumberGen.sh
chmod a+x ./ExtractSCOs.sh

for i in $(seq 1.5 0.5 6); do
./CopyNumberGen.sh named_groups_${i}.txt > named_groups_${i}_freq.txt;
./ExtractSCOs.sh named_groups_${i}_freq.txt > scos_list_${i}.txt;
done

wc -l scos_list_*.txt


```
----------------------------------------------------------------------------------
Extra for Heather
Find sequences based on names in paper
Create names.txt file with list of \n separated names.
```
sort missing_wheat_names.txt | uniq > missing_wheat_names.txt
sort missing_barley_names.txt | uniq > missing_barley_names.txt
sort missing_arabidopsis_names.txt | uniq > missing_arabidopsis_names.txt
```

```
blastdbcmd -db ./TA/TAdb -entry all -outfmt "%f" | grep -f names.txt - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./TA/TAdb -entry_batch - -outfmt "%f" >Wheat_missing.fasta

blastdbcmd -db ./HV/HVdb -entry all -outfmt "%f" | grep -f names.txt - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./HV/HVdb -entry_batch - -outfmt "%f" >Barley_missing.fasta

blastdbcmd -db ./AT/ATdb -entry all -outfmt "%f" | grep -f names.txt - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./AT/ATdb -entry_batch - -outfmt "%f" >Arabidopsis_missing.fasta
```
Text file would look like:
---
Traes_1AL_0007E2761.1
Traes_1AL_002FAE6E8.1
Traes_1AL_015BAE72C.1
---

or for single name but not full name
```
blastdbcmd -db ./TA/TAdb -entry all -outfmt "%f" | grep [TYPE_GENE_NAME_HERE] - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./TA/TAdb -entry - -outfmt "%f"
```
Example for single name
```
blastdbcmd -db ./TA/TAdb -entry all -outfmt "%f" | grep 2A454DB62 - | awk '{print $1}' | sed 's/^>//' | blastdbcmd -db ./TA/TAdb -entry_batch - -outfmt "%f"
```
or if you know the correct full name
```
blastdbcmd -db ./TA/TAdb -entry TRAES3BF053100340CFD_t1 -outfmt "%f"
blastdbcmd -db ./TA/TAdb -entry Traes_1AL_0007E2761.1 -outfmt "%f"
```
